import streamlit as st
import pandas as pd
import numpy as np
from collections import defaultdict

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º–∏ –≤–∏–º–æ–≥–∞–º–∏
st.set_page_config(
    page_title="–°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π –∫–Ω–∏–∂–æ–∫",
    page_icon="üìö",
    layout="centered"  # –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ "centered" –∑–∞–º—ñ—Å—Ç—å "wide" –¥–ª—è –º–µ–Ω—à–æ–≥–æ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–¥–∞—Ç–∫—É
st.title("üìö –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∏")
st.write("–û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è —Ä–æ–±–æ—Ç–∏ –Ω–∞ –∫–æ–º–ø'—é—Ç–µ—Ä–∞—Ö –∑ –æ–±–º–µ–∂–µ–Ω–∏–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö - —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–µ–≤–µ–ª–∏–∫–∏–π –Ω–∞–±—ñ—Ä –¥–∞–Ω–∏—Ö
@st.cache_data
def load_data():
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∞–Ω—ñ –∑ –º–µ–Ω—à–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ –∫–Ω–∏–∂–æ–∫
    users = [f"–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á_{i}" for i in range(1, 31)]  # —Å–∫–æ—Ä–æ—á—É—î–º–æ –¥–æ 30 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    books = [
        "–¢—ñ–Ω—ñ –∑–∞–±—É—Ç–∏—Ö –ø—Ä–µ–¥–∫—ñ–≤", "–õ—ñ—Å–æ–≤–∞ –ø—ñ—Å–Ω—è", "–ö–∞–π–¥–∞—à–µ–≤–∞ —Å—ñ–º'—è", 
        "–ß–æ—Ä–Ω–∞ —Ä–∞–¥–∞", "–ó–∞—Ö–∞—Ä –ë–µ—Ä–∫—É—Ç", "–ó–µ–º–ª—è", "–¢–∏–≥—Ä–æ–ª–æ–≤–∏",
        "–ó–∞–ø–∏—Å–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ —Å–∞–º–∞—à–µ–¥—à–æ–≥–æ", "–°–æ–ª–æ–¥–∫–∞ –î–∞—Ä—É—Å—è", "–ú—ñ—Å—Ç–æ"
    ]
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ DataFrame –∑ –æ—Ü—ñ–Ω–∫–∞–º–∏
    np.random.seed(42)
    ratings_data = []
    for user in users:
        # –ö–æ–∂–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—Ü—ñ–Ω—é—î –≤—ñ–¥ 2 –¥–æ 6 –∫–Ω–∏–∂–æ–∫
        num_ratings = np.random.randint(2, 7)
        rated_books = np.random.choice(books, num_ratings, replace=False)
        for book in rated_books:
            # –û—Ü—ñ–Ω–∫–∏ –≤—ñ–¥ 1 –¥–æ 5
            rating = np.random.randint(1, 6)
            ratings_data.append({'user_id': user, 'book_title': book, 'rating': rating})
    
    ratings_df = pd.DataFrame(ratings_data)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ DataFrame –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∫–Ω–∏–∂–∫–∏
    books_data = []
    genres = ['–†–æ–º–∞–Ω', '–ü–æ–≤—ñ—Å—Ç—å', '–î—Ä–∞–º–∞', '–ù–æ–≤–µ–ª–∞', '–Ü—Å—Ç–æ—Ä–∏—á–Ω–∏–π —Ä–æ–º–∞–Ω']
    authors = ['–ú–∏—Ö–∞–π–ª–æ –ö–æ—Ü—é–±–∏–Ω—Å—å–∫–∏–π', '–õ–µ—Å—è –£–∫—Ä–∞—ó–Ω–∫–∞', '–Ü–≤–∞–Ω –ù–µ—á—É–π-–õ–µ–≤–∏—Ü—å–∫–∏–π', 
              '–ü–∞–Ω—Ç–µ–ª–µ–π–º–æ–Ω –ö—É–ª—ñ—à', '–Ü–≤–∞–Ω –§—Ä–∞–Ω–∫–æ', '–û–ª—å–≥–∞ –ö–æ–±–∏–ª—è–Ω—Å—å–∫–∞', '–Ü–≤–∞–Ω –ë–∞–≥—Ä—è–Ω–∏–π',
              '–õ—ñ–Ω–∞ –ö–æ—Å—Ç–µ–Ω–∫–æ', '–ú–∞—Ä—ñ—è –ú–∞—Ç—ñ–æ—Å', '–í–∞–ª–µ—Ä\'—è–Ω –ü—ñ–¥–º–æ–≥–∏–ª—å–Ω–∏–π']
    
    # –î–æ–¥–∞—î–º–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–Ω–∏–∂–∫–∏
    book_info = {
        "–¢—ñ–Ω—ñ –∑–∞–±—É—Ç–∏—Ö –ø—Ä–µ–¥–∫—ñ–≤": {"author": "–ú–∏—Ö–∞–π–ª–æ –ö–æ—Ü—é–±–∏–Ω—Å—å–∫–∏–π", "genre": "–ü–æ–≤—ñ—Å—Ç—å", "year": 1911},
        "–õ—ñ—Å–æ–≤–∞ –ø—ñ—Å–Ω—è": {"author": "–õ–µ—Å—è –£–∫—Ä–∞—ó–Ω–∫–∞", "genre": "–î—Ä–∞–º–∞", "year": 1911},
        "–ö–∞–π–¥–∞—à–µ–≤–∞ —Å—ñ–º'—è": {"author": "–Ü–≤–∞–Ω –ù–µ—á—É–π-–õ–µ–≤–∏—Ü—å–∫–∏–π", "genre": "–ü–æ–≤—ñ—Å—Ç—å", "year": 1879},
        "–ß–æ—Ä–Ω–∞ —Ä–∞–¥–∞": {"author": "–ü–∞–Ω—Ç–µ–ª–µ–π–º–æ–Ω –ö—É–ª—ñ—à", "genre": "–Ü—Å—Ç–æ—Ä–∏—á–Ω–∏–π —Ä–æ–º–∞–Ω", "year": 1857},
        "–ó–∞—Ö–∞—Ä –ë–µ—Ä–∫—É—Ç": {"author": "–Ü–≤–∞–Ω –§—Ä–∞–Ω–∫–æ", "genre": "–Ü—Å—Ç–æ—Ä–∏—á–Ω–∞ –ø–æ–≤—ñ—Å—Ç—å", "year": 1883},
        "–ó–µ–º–ª—è": {"author": "–û–ª—å–≥–∞ –ö–æ–±–∏–ª—è–Ω—Å—å–∫–∞", "genre": "–†–æ–º–∞–Ω", "year": 1902},
        "–¢–∏–≥—Ä–æ–ª–æ–≤–∏": {"author": "–Ü–≤–∞–Ω –ë–∞–≥—Ä—è–Ω–∏–π", "genre": "–†–æ–º–∞–Ω", "year": 1944},
        "–ó–∞–ø–∏—Å–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ —Å–∞–º–∞—à–µ–¥—à–æ–≥–æ": {"author": "–õ—ñ–Ω–∞ –ö–æ—Å—Ç–µ–Ω–∫–æ", "genre": "–†–æ–º–∞–Ω", "year": 2010},
        "–°–æ–ª–æ–¥–∫–∞ –î–∞—Ä—É—Å—è": {"author": "–ú–∞—Ä—ñ—è –ú–∞—Ç—ñ–æ—Å", "genre": "–†–æ–º–∞–Ω", "year": 2004},
        "–ú—ñ—Å—Ç–æ": {"author": "–í–∞–ª–µ—Ä'—è–Ω –ü—ñ–¥–º–æ–≥–∏–ª—å–Ω–∏–π", "genre": "–†–æ–º–∞–Ω", "year": 1928}
    }
    
    for book in books:
        books_data.append({
            'title': book,
            'author': book_info[book]["author"],
            'genre': book_info[book]["genre"],
            'year': book_info[book]["year"]
        })
    
    books_df = pd.DataFrame(books_data)
    
    return ratings_df, books_df

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ
ratings_df, books_df = load_data()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π - –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è –±–µ–∑ –ø–æ–±—É–¥–æ–≤–∏ –ø–æ–≤–Ω–æ—ó –º–∞—Ç—Ä–∏—Ü—ñ
def get_recommendations_optimized(target_user, ratings_df, n=3):
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É"""
    # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–∂–æ–∫, —è–∫—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –æ—Ü—ñ–Ω–∏–≤
    user_books = ratings_df[ratings_df['user_id'] == target_user]['book_title'].tolist()
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –æ—Ü—ñ–Ω–∏–ª–∏ —Ç—ñ —Å–∞–º—ñ –∫–Ω–∏–∂–∫–∏
    similar_users = []
    for idx, row in ratings_df.iterrows():
        if row['user_id'] != target_user and row['book_title'] in user_books:
            similar_users.append(row['user_id'])
    
    # –í–∏–¥–∞–ª—è—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏
    similar_users = list(set(similar_users))
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–∏–∂–∫–∏, —è–∫—ñ –æ—Ü—ñ–Ω–∏–ª–∏ —Å—Ö–æ–∂—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ, –∞–ª–µ –Ω–µ –æ—Ü—ñ–Ω–∏–≤ —Ü—ñ–ª—å–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
    potential_recommendations = {}
    for user in similar_users:
        # –ö–Ω–∏–∂–∫–∏, —è–∫—ñ –æ—Ü—ñ–Ω–∏–≤ —Å—Ö–æ–∂–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        user_rated_books = ratings_df[ratings_df['user_id'] == user]
        
        for idx, row in user_rated_books.iterrows():
            book = row['book_title']
            if book not in user_books:  # —è–∫—â–æ —Ü—ñ–ª—å–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –æ—Ü—ñ–Ω–∏–≤ —Ü—é –∫–Ω–∏–∂–∫—É
                if book not in potential_recommendations:
                    potential_recommendations[book] = []
                potential_recommendations[book].append(row['rating'])
    
    # –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —Å–µ—Ä–µ–¥–Ω—é –æ—Ü—ñ–Ω–∫—É –¥–ª—è –∫–æ–∂–Ω–æ—ó –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–æ—ó —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
    final_recommendations = {}
    for book, ratings in potential_recommendations.items():
        if len(ratings) > 0:  # –º—ñ–Ω—ñ–º—É–º –æ–¥–Ω–∞ –æ—Ü—ñ–Ω–∫–∞
            final_recommendations[book] = sum(ratings) / len(ratings)
    
    # –°–æ—Ä—Ç—É—î–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –∑–∞ –æ—Ü—ñ–Ω–∫–æ—é
    sorted_recommendations = sorted(final_recommendations.items(), key=lambda x: x[1], reverse=True)
    
    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ç–æ–ø-n —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π
    return sorted_recommendations[:n]

# –ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É Streamlit
st.sidebar.header("–ü–∞–Ω–µ–ª—å –∫–µ—Ä—É–≤–∞–Ω–Ω—è")

# –í–∏–±–∏—Ä–∞—î–º–æ —Ç–∏–ø –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω—ñ –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –∑–º–µ–Ω—à–µ–Ω–Ω—è –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
display_mode = st.sidebar.selectbox(
    "–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:",
    ["–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó", "–î–∞–Ω—ñ", "–ü—Ä–æ —Å–∏—Å—Ç–µ–º—É"]
)

if display_mode == "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó":
    st.header("–û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó")
    
    # –í–∏–±—ñ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    users_list = sorted(ratings_df['user_id'].unique())
    selected_user = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", users_list)
    
    # –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π - –æ–±–º–µ–∂—É—î–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
    num_recommendations = st.slider("–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π:", 1, 5, 3)
    
    if st.button("–û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó"):
        with st.spinner("–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π..."):
            # –û—Ç—Ä–∏–º—É—î–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
            recommendations = get_recommendations_optimized(selected_user, ratings_df, n=num_recommendations)
            
            if recommendations:
                st.subheader(f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è {selected_user}:")
                
                # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç—É —Ç–∞–±–ª–∏—Ü—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π
                rec_data = []
                for book, score in recommendations:
                    book_info = books_df[books_df['title'] == book].iloc[0]
                    rec_data.append({
                        '–ù–∞–∑–≤–∞': book,
                        '–ê–≤—Ç–æ—Ä': book_info['author'],
                        '–ñ–∞–Ω—Ä': book_info['genre'],
                        '–ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∞ –æ—Ü—ñ–Ω–∫–∞': round(score, 1)
                    })
                
                rec_df = pd.DataFrame(rec_data)
                st.dataframe(rec_df)
                
            else:
                st.warning("–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–±—Ä–∞—Ç–∏ —ñ–Ω—à–æ–≥–æ.")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–∏–∂–∫–∏, —è–∫—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –æ—Ü—ñ–Ω–∏–≤
    st.subheader(f"–ö–Ω–∏–∂–∫–∏, –≤–∂–µ –æ—Ü—ñ–Ω–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º {selected_user}:")
    user_ratings = ratings_df[ratings_df['user_id'] == selected_user]
    
    if not user_ratings.empty:
        # –û–±'—î–¥–Ω—É—î–º–æ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∫–Ω–∏–∂–∫–∏
        user_books = pd.merge(user_ratings, books_df, left_on='book_title', right_on='title')
        st.dataframe(user_books[['title', 'author', 'genre', 'year', 'rating']])
    else:
        st.info("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —â–µ –Ω–µ –æ—Ü—ñ–Ω–∏–≤ –∂–æ–¥–Ω–æ—ó –∫–Ω–∏–∂–∫–∏.")

elif display_mode == "–î–∞–Ω—ñ":
    st.header("–î–∞–Ω—ñ —Å–∏—Å—Ç–µ–º–∏")
    
    st.subheader("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–Ω–∏–∂–∫–∏")
    st.dataframe(books_df.rename(columns={
        'title': '–ù–∞–∑–≤–∞',
        'author': '–ê–≤—Ç–æ—Ä',
        'genre': '–ñ–∞–Ω—Ä',
        'year': '–†—ñ–∫'
    }))
    
    st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ü—ñ–Ω–æ–∫")
    col1, col2 = st.columns(2)
    
    with col1:
        st.metric("–í—Å—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", len(ratings_df['user_id'].unique()))
        st.metric("–í—Å—å–æ–≥–æ –∫–Ω–∏–∂–æ–∫", len(ratings_df['book_title'].unique()))
    
    with col2:
        st.metric("–í—Å—å–æ–≥–æ –æ—Ü—ñ–Ω–æ–∫", len(ratings_df))
        st.metric("–°–µ—Ä–µ–¥–Ω—è –æ—Ü—ñ–Ω–∫–∞", round(ratings_df['rating'].mean(), 2))
    
    # –ó–∞–º—ñ—Å—Ç—å —Å–∫–ª–∞–¥–Ω–∏—Ö –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ—Å—Ç—É —Ç–∞–±–ª–∏—Ü—é –∑ —Ä–æ–∑–ø–æ–¥—ñ–ª–æ–º –æ—Ü—ñ–Ω–æ–∫
    st.subheader("–†–æ–∑–ø–æ–¥—ñ–ª –æ—Ü—ñ–Ω–æ–∫")
    rating_counts = ratings_df['rating'].value_counts().sort_index().reset_index()
    rating_counts.columns = ['–û—Ü—ñ–Ω–∫–∞', '–ö—ñ–ª—å–∫—ñ—Å—Ç—å']
    st.dataframe(rating_counts)


# –î–æ–¥–∞—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –ø—ñ–¥–≤–∞–ª
st.sidebar.markdown("---")
st.sidebar.markdown("üìö **–°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∏**")


